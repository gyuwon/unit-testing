// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace HelloWorld.Tests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ClearMessageText - Use 'ClearMessageTextParams' to pass parameters into this method.
        /// </summary>
        public void ClearMessageText()
        {
            #region Variable Declarations
            WpfEdit uIMessageTextBoxEdit = this.UIHelloWorldWindow.UIMessageTextBoxEdit;
            #endregion

            // Type '' in 'MessageTextBox' text box
            uIMessageTextBoxEdit.Text = this.ClearMessageTextParams.UIMessageTextBoxEditText;
        }
        
        /// <summary>
        /// ClickGetMessageButton
        /// </summary>
        public void ClickGetMessageButton()
        {
            #region Variable Declarations
            WpfButton uIGetaMessageButton = this.UIHelloWorldWindow.UIGetaMessageButton;
            #endregion

            // Click 'Get a Message' button
            Mouse.Click(uIGetaMessageButton, new Point(156, 27));
        }
        
        #region Properties
        public virtual ClearMessageTextParams ClearMessageTextParams
        {
            get
            {
                if ((this.mClearMessageTextParams == null))
                {
                    this.mClearMessageTextParams = new ClearMessageTextParams();
                }
                return this.mClearMessageTextParams;
            }
        }
        
        public UIHelloWorldWindow UIHelloWorldWindow
        {
            get
            {
                if ((this.mUIHelloWorldWindow == null))
                {
                    this.mUIHelloWorldWindow = new UIHelloWorldWindow();
                }
                return this.mUIHelloWorldWindow;
            }
        }
        #endregion
        
        #region Fields
        private ClearMessageTextParams mClearMessageTextParams;
        
        private UIHelloWorldWindow mUIHelloWorldWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClearMessageText'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class ClearMessageTextParams
    {
        
        #region Fields
        /// <summary>
        /// Type '' in 'MessageTextBox' text box
        /// </summary>
        public string UIMessageTextBoxEditText = "";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHelloWorldWindow : WpfWindow
    {
        
        public UIHelloWorldWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Hello World";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Hello World");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIMessageTextBoxEdit
        {
            get
            {
                if ((this.mUIMessageTextBoxEdit == null))
                {
                    this.mUIMessageTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIMessageTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "MessageTextBox";
                    this.mUIMessageTextBoxEdit.WindowTitles.Add("Hello World");
                    #endregion
                }
                return this.mUIMessageTextBoxEdit;
            }
        }
        
        public WpfButton UIGetaMessageButton
        {
            get
            {
                if ((this.mUIGetaMessageButton == null))
                {
                    this.mUIGetaMessageButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIGetaMessageButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GetMessageButton";
                    this.mUIGetaMessageButton.WindowTitles.Add("Hello World");
                    #endregion
                }
                return this.mUIGetaMessageButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIMessageTextBoxEdit;
        
        private WpfButton mUIGetaMessageButton;
        #endregion
    }
}
